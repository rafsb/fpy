<template>
    <div id="splash" class="fixed view zero blur" style="z-index:10000;background-color: {{background}}66;"></div>
    <script>
        const letters = [ 8, 10 ] ;;
        get(`img/sctech.svg`, res => {
            res = res.morph()[0]
            res.$(`path`).forEach((p, i) => p.css({ 
                stroke: i < letters[0] ? '{{span}}' : '{{font}}'
                , fill: i < letters[0] ? '{{span}}' : '{{font}}'
                , "stroke-width": 1
            }))
            $(`#splash`)[0].append(DIV(`centered -logo`).css({ pointerEvents: `none` }).append(res))
            // $(`#app`)[0].append(DIV(`centered -logo`).css({ pointerEvents: `none`, opacity:.1 }).append(res.mime()))
            res.$(`rect`).forEach((p, i) => {
                const len = p.getTotalLength() ;;
                p.css({ 
                    stroke: '{{span}}'
                    , fill: 'none'
                    , "stroke-dasharray": `${len},${len}`
                    , "stroke-offset": len * -1
                    , "stroke-width": 1
                })
            })
        })

        setTimeout(_ => bootloader.ready('splash'), AL * letters.sum())

        window.loading = {
            status: false
            , offset: 1
            , fire: sw => {
                const rect_load = _ => $(`#splash .-logo rect`).forEach((p, i) => {
                    try {
                        p.anime({ "stroke-dashoffset": (p?.getTotalLength()||0) * window.loading.offset, opacity: 1 }, 80 * letters.sum(), 40 * i)
                    } catch(e) {
                        p.anime({ "stroke-dashoffset": 0, opacity: 1 }, 80 * letters.sum(), 40 * i)
                    }
                }) ;;
                window.loading.offset = (window.loading.offset + 1) % 2
                if(window.loading.status) {
                    clearInterval(window.loading.chron_off)
                    window.loading.chron_off = null
                    $('#splash').appear()
                    rect_load()
                    if(sw) $(`#splash .-logo path`).forEach((p, i) => p.anime({ opacity: 1 }, 200, 40 * i))
                    else $(`#splash .-logo path`).forEach((p, i) => p.anime({ opacity: .08 }, 200, 40 * i))
                    window.loading.chron_on = setTimeout(window.loading.fire, (letters.sum() * 2) * 40, !sw)
                } else setTimeout(_ => {
                    clearInterval(window.loading.chron_on)
                    window.loading.chron_on = null
                    $(`#splash .-logo path`).forEach((p, i) => p.anime({ opacity: .08 }, 200, 40 * i))
                    $(`#splash .-logo rect`).forEach((p, i) => p.anime({ opacity: .08 }, 200, 40 * i))
                    rect_load()
                    window.loading.chron_off = setTimeout(_ => $('#splash').disappear(), letters.sum() * 40)
                    window.loading.offset = 1
                }, 40)
            }
            , on: _ => {
                if(window.loading.chron_on) return
                window.loading.status = true
                window.loading.fire(true)
            }
            , off: _ => {
                if(window.loading.chron_off) return
                window.loading.status = false
                window.loading.fire(true)
            }
        }

        window.loading.on()
    </script>

</template>